function visualizeSpatialPoolingKernelsAndStimuli(spatialPoolingKernels, ...
    lowFrequencyScene, lowFrequencySceneOrtho, ...
    highFrequencyScene, highFrequencySceneOrtho, spatialSupportDegs)
    
    hFig = figure(333); clf;
    set(hFig, 'Position', [10 10 1640 910], 'Color', [1 1 1]);
    
    subplotPosVectors = NicePlot.getSubPlotPosVectors(...
        'rowsNum', 3, ...
        'colsNum', 4, ...
        'heightMargin',  0.03, ...
        'widthMargin',    0.03, ...
        'leftMargin',     0.03, ...
        'rightMargin',    0.03, ...
        'bottomMargin',   0.05, ...
        'topMargin',      0.05);

    % The low frequency stimulus and pooling weights
    ax1 = subplot('Position', subplotPosVectors(1,1).v);
    ax2 = subplot('Position', subplotPosVectors(2,1).v);
    ax3 = subplot('Position', subplotPosVectors(3,1).v);
    sceneRGB = sceneGet(lowFrequencyScene, 'rgbimage');
    visualizeSpatialPoolingScheme(ax1, ax2, ax3, spatialPoolingKernels.coneLocsDegs, spatialPoolingKernels.coneAperture, ...
        spatialPoolingKernels.lowFrequencyPoolingWeightsLinear, ...
        spatialPoolingKernels.lowFrequencyPoolingWeightsQuadrature, ...
        spatialSupportDegs, sceneRGB, ...
        'low frequency stimulus (0 deg)');
    
    % The orthogonal low frequency stimulus and templates
    ax1 = subplot('Position', subplotPosVectors(1,2).v);
    ax2 = subplot('Position', subplotPosVectors(2,2).v);
    ax3 = subplot('Position', subplotPosVectors(3,2).v);
    sceneRGB = sceneGet(lowFrequencySceneOrtho, 'rgbimage');
    visualizeSpatialPoolingScheme(ax1, ax2, ax3, spatialPoolingKernels.coneLocsDegs, spatialPoolingKernels.coneAperture, ...
        spatialPoolingKernels.lowFrequencyOrthoPoolingWeightsLinear, ...
        spatialPoolingKernels.lowFrequencyOrthoPoolingWeightsQuadrature, ...
        spatialSupportDegs, sceneRGB, ...
        'low frequency stimulus (90 deg)');
    
    % The high frequency stimulus and templates
    ax1 = subplot('Position', subplotPosVectors(1,3).v);
    ax2 = subplot('Position', subplotPosVectors(2,3).v);
    ax3 = subplot('Position', subplotPosVectors(3,3).v);
    sceneRGB = sceneGet(highFrequencyScene, 'rgbimage');
    visualizeSpatialPoolingScheme(ax1, ax2, ax3, spatialPoolingKernels.coneLocsDegs, spatialPoolingKernels.coneAperture, ...
        spatialPoolingKernels.highFrequencyPoolingWeightsLinear, ...
        spatialPoolingKernels.highFrequencyPoolingWeightsQuadrature, ...
        spatialSupportDegs, sceneRGB, ...
        'high frequency stimulus (0 deg)');

    % The orthogonal low frequency stimulus and templates
    ax1 = subplot('Position', subplotPosVectors(1,4).v);
    ax2 = subplot('Position', subplotPosVectors(2,4).v);
    ax3 = subplot('Position', subplotPosVectors(3,4).v);
    sceneRGB = sceneGet(highFrequencySceneOrtho, 'rgbimage');
    visualizeSpatialPoolingScheme(ax1, ax2, ax3, spatialPoolingKernels.coneLocsDegs, spatialPoolingKernels.coneAperture, ...
        spatialPoolingKernels.highFrequencyOrthoPoolingWeightsLinear, ...
        spatialPoolingKernels.highFrequencyOrthoPoolingWeightsQuadrature, ...
        spatialSupportDegs, sceneRGB, ...
        'high frequency stimulus (90 deg)');
    
end

function visualizeSpatialPoolingScheme(ax1, ax2, ax3, coneLocsDegs, coneAperture, ...
    poolingWeights, poolingWeightsQuadr, spatialSupportDegs, stimulusRGB, stimulusTitle)

    % Plot stimulus
    imagesc(ax1, spatialSupportDegs, spatialSupportDegs, stimulusRGB);
    set(ax1, 'CLim', [-1 1], 'XLim', max(abs(spatialSupportDegs))*[-1 1], 'YLim', max(abs(spatialSupportDegs))*[-1 1], 'FontSize', 14);
    ylabel(ax1,'spatial position (degs)');
    axis(ax1, 'image');
    axis(ax1, 'xy');
    set(ax1, 'XTickLabel', {});
    ticks = max(abs(spatialSupportDegs))*[-1 0 1];
    tickLabels = sprintf('%2.1f\n', ticks);
    set(ax1, 'YTick', ticks, 'YTickLabel', tickLabels);
    colormap(ax1,gray(1024));
    title(ax1, stimulusTitle);
    drawnow;

    visualizePoolingKernel(ax2, coneLocsDegs, coneAperture, poolingWeights, spatialSupportDegs, false);
    visualizePoolingKernel(ax3, coneLocsDegs, coneAperture, poolingWeightsQuadr, spatialSupportDegs, true);
end

