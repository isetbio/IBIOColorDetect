function dirname = paramsToResponseGenerationDirName(obj,params)
% dirname = paramsToResponseGenerationDirName(obj,params)
%
% Generate a directory names that captures the basic parameters used to
% find threshold.

if (~strcmp(params.type,'threshold'))
    error('Incorrect parameter type passed');
end

switch (params.method)
    case 'svm'
        theThresholdName = sprintf('%s_%s_%dInt_kFold%d_PCA%d_std%d_c%0.2f',...
            params.method, ...
            params.signalSource, ...
            params.nIntervals, ...
            params.kFold, ...
            params.PCAComponents, ...
            params.STANDARDIZE, ...
            params.criterionFraction ...
            );
        
    case 'svmSpaceTimeSeparable'
        if (isfield(params, 'useRBFKernel')) && (params.useRBFKernel)
            methodName = sprintf('%sRBF', params.method);
        else
            methodName = sprintf('%s', params.method);
        end
        theThresholdName = sprintf('%s_%s_%dInt_kFold%d_PCA%d_std%d_c%0.2f',...
            methodName, ...
            params.signalSource, ...
            params.nIntervals, ...
            params.kFold, ...
            params.PCAComponents, ...
            params.standardizeSVMpredictors, ...
            params.criterionFraction ...
            );
        
    case {'svmV1FilterBank', 'svmV1FilterBankFullWaveRectAF', 'svmGaussianRF'}
        if (isfield(params, 'useRBFKernel')) && (params.useRBFKernel)
            methodName = sprintf('%sRBF', params.method);
        else
            methodName = sprintf('%s', params.method);
        end
        
        if (isfield(params,'spatialPoolingKernelParams'))
           if isfield(params.spatialPoolingKernelParams, 'shrinkageFactor')
                methodName = sprintf('%s_%0.2fshrinkageFactor', methodName, params.spatialPoolingKernelParams.shrinkageFactor);
           end
        end
        
        theThresholdName = sprintf('%s_%s_%dInt_kFold%d_stdSVMpredictors%d_c%0.2f',...
                methodName, ...
                params.signalSource, ...
                params.nIntervals, ...
                params.kFold, ...
                params.standardizeSVMpredictors, ...
                params.criterionFraction ...
            );
        
        
        
    case {'mlpe', 'mlpt'}
        theThresholdName = sprintf('%s_%s_%dInt_kFold%d_c%0.2f',...
            params.method, ...
            params.signalSource, ...
            params.nIntervals, ...
            params.kFold, ...
            params.criterionFraction ... 
        );
    
    case 'mlgtGaussianRF'
        theThresholdName = sprintf('%s_%s_%dInt_kFold%d_c%0.2f',...
            params.method, ...
            params.signalSource, ...
            params.nIntervals, ...
            params.kFold, ...
            params.criterionFraction ... 
        );
    
    otherwise
        error('Unknown classification method');
end

if (isfield(params, 'trialsUsed'))
    theThresholdName = sprintf('%s_trialsUsed%d',theThresholdName, params.trialsUsed);
end

if (~isempty(params.evidenceIntegrationTime))
    theThresholdName = sprintf('%s_evidenceIntegrationTimeMilliSecs%2.1f',theThresholdName, params.actualEvidenceIntegrationTime);
end

dirname = theThresholdName;

